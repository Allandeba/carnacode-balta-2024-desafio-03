<EditForm Model="Model" OnValidSubmit="OnValidSubmitAsync" FormName="Calculator">
    <div class="container col-md-4">
        <h1 class="text-center mb-3">Cálculo de IMC</h1>
        
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="d-flex flex-column">
            <div class="mb-3">
                <InputNumber type="number" step="1" class="form-control" @bind-Value="Model.Height" placeholder="Altura (metros)" />
            </div>

            <div class="mb-3">
                <InputNumber type="number" step="0.1" class="form-control" @bind-Value="Model.Weight" placeholder="Peso (kg)" />
            </div>

            <div class="mb-3">
                <InputSelect class="form-select" @bind-Value="Model.Gender">
                    <option value="@EGender.NaoInformado">Não Informado</option>
                    <option value="@EGender.Masculino">Masculino</option>
                    <option value="@EGender.Feminino">Feminino</option>
                </InputSelect>
            </div>

            <div class="mb-3">
                <div class="form-check">
                    <InputCheckbox id="older" class="form-check-input" type="checkbox" @bind-Value="Model.Older" />
                    <label for="older" class="form-check-label">Eu tenho 65 anos ou mais</label>
                </div>
            </div>

            <button type="submit" class="btn btn-primary mb-2" @onclick="Calculate">Calcular meu IMC</button>
            @ChildContent
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    [EditorRequired]
    [Parameter]
    public ImcCalculator Model { get; set; } = new();
    
    [EditorRequired]
    [Parameter]
    public EventCallback Calculate { get; set; }

    private async Task OnValidSubmitAsync()
    {
        Model.CreatedDateTime = DateTime.UtcNow;
        await Calculate.InvokeAsync();
    }
}